from pathlib import Path
from os.path import getsize as gts
import bisect

size = [1, 1e+3, 1e+6, 1e+9]
unit = ['B', 'K', 'M', 'G']
file_dict = {}
path = Path('/home/mana/Backup')
clt_files = [fr for fr in path.rglob('*')]
for rf in clt_files:
    if not rf.is_dir():
        file_dict[rf.parent] = file_dict.get(rf.parent, 0)+gts(str(rf))
def convert(byts):
    byts = int(byts)
    index = bisect.bisect(size, byts)-1
    return "{:.0f}{}".format(byts//size[index], unit[index])

##Subdirectory Size
for dname, fsize in file_dict.items():
    if fsize != 0 and str(path) != str(dname):
        print('{:40}{}'.format(str(dname.parents[0].name+'/'+dname.name), convert(fsize)))

##Directory Size
dsize = sum(file_dict.values())
for dname, fsize in file_dict.items():
    if fsize != 0 and str(path) == str(dname):
        print('{:40}{}'.format(str(dname.parents[0].name+'/'+dname.name), convert(dsize)))
